eset Seasons = { spring, summer, autumn, winter }.

scene ecothermScene = {

    size = (978, 582).
    layers = { top }.

    background = loadImage(Images/maquette.png).
    backgroundLight = loadImage(Images/light2.png).
    backgroundTemp = loadImage(Images/temperature2.png).
    backgroundCons = loadImage(Images/consumption2.png).

    coldTemp = loadImage(Images/resized/printemps.png).
    veryColdTemp = loadImage(Images/resized/ete.png).
    hotTemp = loadImage(Images/resized/automne.png).
    veryHotTemp = loadImage(Images/resized/hiver.png).

    springIm = loadImage(Images/spring_icone.png).
    summerIm = loadImage(Images/summer_icone.png).
    autumnIm = loadImage(Images/autumn_icone.png).
    winterIm = loadImage(Images/winter_icone.png).

    widget light = {
           display = { backgroundLight }
           init = { wdL = top. }
        }

    widget temp = {
           display = { backgroundTemp }
           init = { wdL = top. }
        }

    widget springTemp = {
           display = { coldTemp }
           init = { wdL = top. }
        }
    widget summerTemp = {
           display = { veryColdTemp }
           init = { wdL = top. }
        }
    widget autumnTemp = {
           display = { hotTemp }
           init = { wdL = top. }
        }
    widget winterTemp = {
           display = { veryHotTemp }
           init = { wdL = top. }
        }
    widget springIcone = {
           display = { springIm }
           init = { wdL = top. }
        }
    widget summerIcone = {
           display = { summerIm }
           init = { wdL = top. }
        }
    widget autumnIcone = {
           display = { autumnIm }
           init = { wdL = top. }
        }
    widget winterIcone = {
           display = { winterIm }
           init = { wdL = top. }
        }

    widget cons = {
           display = { backgroundCons }
           init = { wdL = top. }
        }

}.


proc Init = draw_scene(ecothermScene);
            place_at(light,ecothermScene,0,0);
            place_at(temp,ecothermScene,0,0);
            place_at(cons,ecothermScene,0,0);

            place_at(springTemp,ecothermScene,600,220);
            place_at(summerTemp,ecothermScene,600,220);
            place_at(autumnTemp,ecothermScene,600,220);
            place_at(winterTemp,ecothermScene,600,220);

            place_at(springIcone,ecothermScene,150,220);
            place_at(summerIcone,ecothermScene,150,220);
            place_at(autumnIcone,ecothermScene,150,220);
            place_at(winterIcone,ecothermScene,150,220).

     Light = tell(light); show(light,ecothermScene);
             get(temp); hide(temp,ecothermScene);
             get(cons); hide(cons,ecothermScene);
             Light.

     Temp = tell(temp); show(temp,ecothermScene);
            get(light); hide(light,ecothermScene);
            get(cons); hide(cons,ecothermScene);
            Temp.

     RemoveTemp (s: Seasons) =
         ( (s = spring) -> (
             ( get(summerIcone); hide(summerIcone,ecothermScene);
               get(summerTemp); hide(summerTemp,ecothermScene)
               )
             +
             ( get(autumnIcone); hide(autumnIcone,ecothermScene);
               get(autumnTemp); hide(autumnTemp,ecothermScene)
               )
             +
             ( get(winterIcone); hide(winterIcone,ecothermScene);
               get(winterTemp); hide(winterTemp,ecothermScene)
               )
             ) )
         +
         ( (s = summer) -> (
             ( get(springIcone); hide(springIcone,ecothermScene);
               get(springTemp); hide(springTemp,ecothermScene)
               )
             +
             ( get(autumnIcone); hide(autumnIcone,ecothermScene);
               get(autumnTemp); hide(autumnTemp,ecothermScene)
               )
             +
             ( get(winterIcone); hide(winterIcone,ecothermScene);
               get(winterTemp); hide(winterTemp,ecothermScene)
               )
             ) )
         +
         ( (s = autumn) -> (
             ( get(springIcone); hide(springIcone,ecothermScene);
               get(springTemp); hide(springTemp,ecothermScene)
               )
             +
             ( get(summerIcone); hide(summerIcone,ecothermScene);
               get(summerTemp); hide(summerTemp,ecothermScene)
               )
             +
             ( get(winterIcone); hide(winterIcone,ecothermScene);
               get(winterTemp); hide(winterTemp,ecothermScene)
               )
             ) )
         +
         ( (s = winter) -> (
             ( get(springIcone); hide(springIcone,ecothermScene);
               get(springTemp); hide(springTemp,ecothermScene)
               )
             +
             ( get(summerIcone); hide(summerIcone,ecothermScene);
               get(summerTemp); hide(summerTemp,ecothermScene)
               )
             +
             ( get(autumnIcone); hide(autumnIcone,ecothermScene);
               get(autumnTemp); hide(autumnTemp,ecothermScene)
               )
             ) ).

     ChoiceTemp (s: Seasons) =
         ( (s=spring) -> (
              tell(springIcone); show(springIcone,ecothermScene);
              tell(springTemp); show(springTemp,ecothermScene);

              RemoveTemp(s)

              ) )
         +
         ( (s=summer) -> (
              tell(summerIcone); show(summerIcone,ecothermScene);
              tell(summerTemp); show(summerTemp,ecothermScene);

              RemoveTemp(s)

              ) )
         +
         ( (s=autumn) -> (
              tell(autumnIcone); show(autumnIcone,ecothermScene);
              tell(autumnTemp); show(autumnTemp,ecothermScene);

              RemoveTemp(s)

              ) )
         +
         ( (s=winter) -> (
              tell(winterIcone); show(winterIcone,ecothermScene);
              tell(winterTemp); show(winterTemp,ecothermScene);

              RemoveTemp(s)

              ) ).

     Cons = tell(cons); show(cons,ecothermScene);
            get(light); hide(light,ecothermScene);
            get(temp); hide(temp,ecothermScene);
            Cons.